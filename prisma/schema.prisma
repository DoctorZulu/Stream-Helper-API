generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int                   @id @default(autoincrement())
  firstname String?
  lastname  String?
  username  String?               @unique
  email     String?               @unique
  password  String?
  movies    UserMovieConnection[]
}

model UserMovieConnection {
  id       Int      @id @default(autoincrement())
  movieId  Int?
  userId   Int?
  title    String?
  image    String?
  liked    Boolean? @default(false)
  disliked Boolean? @default(false)
  saved    Boolean? @default(false)
  watched  Boolean? @default(false)
  movie    Movie?   @relation(fields: [movieId], references: [id])
  user     User?    @relation(fields: [userId], references: [id])
}

model Movie {
  categoryId        Int                   @id @default(autoincrement())
  id                Int?                  @unique
  title             String?
  original_language String?
  release_date      String?
  vote_average      Float?
  image             String?
  backdrop          String?
  overview          String?
  genres            Int?
  trailers1         String?
  trailers2         String?
  trailers3         String?
  similarMovies Json?
  movieKeywords String?
  credits           Credits[]
  Genre             Genre[]
  usersmovies       UserMovieConnection[]
  watchproviders    WatchProvider[]
}

model Credits {
  id      Int     @id @default(autoincrement())
  movieId Int?    @unique
  cast    Json?
  actors  String?
  crew    String?
  movie   Movie?  @relation(fields: [movieId], references: [id])
}

model WatchProvider {
  id         Int     @id @default(autoincrement())
  movieId    Int?
  providers  String?
  buy        String?
  rent       String?
  flatRate   String?
  providerId Int?
  movie      Movie?  @relation(fields: [movieId], references: [id])
}

model Genre {
  id      Int     @id
  name    String?
  movieId Int?
  Movie   Movie?  @relation(fields: [movieId], references: [id])
}
